# -*- coding: utf-8 -*-
"""
Created on Sun Jul 18 16:13:58 2021

@author: 吴彦祖的laptop
"""

import pandas as pd
import numpy as np
import datetime, time


def needTime(reports):
    if type(reports['工厂交期']) == datetime.datetime:
        if reports[0] == '成品层':
            if '2160' in reports['物料组描述（成品）'] or '2460' in reports['物料组描述（成品）']:
                reports['我司需求'] = reports['工厂交期'] - datetime.timedelta(days=10)
            else:
                reports['我司需求'] = reports['工厂交期'] - datetime.timedelta(days=6)
        else:
            reports['我司需求'] = reports['工厂交期'] - datetime.timedelta(days=10)

    return reports['我司需求']

def cleanData():
    
    #导入数据
    addr = r'C:\Users\吴彦祖的laptop\Desktop\company\欠料表.xlsx'
    data = pd.read_excel(addr, sheet_name=None)
    #获取原始缺料表
    shortageSo = data['销售订单物料缺料分析报表 (10)']
    
    #获取表头
    headSoList = list(data['SOhead'].keys())
    headList = list(data['head'].keys())
    
    #获取即将创建的表的长和宽
    totalCell = len(headSoList) * len(shortageSo)
    #创建表
    headSo = pd.DataFrame(np.arange(totalCell).reshape((len(shortageSo), len(headSoList))), columns=headSoList)
    
    #英文表头切换成中文
    shortageSo.columns = headList
    
    #将系统表的列按照我们习惯摆放
    for column in headList:
        headSo[column] = shortageSo[column]
        
    #将到料信息备注改变，是寄售的就处理，不是寄售就把数字变为空
    consignment_list = list(data['寄售'].loc[:,'编码'])
    #如果是string类型，要变成数值类型
    index = 0
    for i in consignment_list:
        consignment_list[index] = int(i)
        index += 1
    consignment_list = tuple(consignment_list)# type of tuple have more perform than list in the key of In
    
    headSo['到料信息备注'] = headSo['对应物料组件编码'].apply(lambda x: '寄售' if (x in consignment_list) else '')
    
    return headSo

def operateData(headSo):
    #选出芯片
    headSo = headSo.loc[headSo['物料组描述（物料）'].str.contains('芯片专用|全新芯片')]
    
    #将销售订单合并成我们希望的样子
    headSo['销售订单'] = headSo['销售订单'].apply(str)
    headSo['SO号'] = headSo['销售订单'] + '/' + headSo['销售订单行项目']
    headSo['SO号'] = headSo['SO号'].apply(lambda x:"".join(['0', x] if x[:2] == '46' else x))
    
    #判断是成品层还是半成品
    headSo['BOM最后一次修改日期'] = headSo['BOM最后一次修改日期'].apply(str)
    headSo[0] = headSo['BOM最后一次修改日期'].apply(lambda x : '成品层' if x != 'NaT' else '')
    
    #整理列表index
    headSo.index = list(range(len(headSo)))
    
    #整理我司需求
    headSo['我司需求'] = headSo.apply(needTime, axis=1) 
    
    
    return headSo

def saveFiles(headSo):
    fileName = '欠料表' + time.strftime("%Y-%m-%d", time.localtime()) + '.xlsx'
    addr = 'D:\\运行结果\\' + fileName
    
    with pd.ExcelWriter(addr) as writer:
        headSo.to_excel(writer, sheet_name='欠料表', index=False)

if __name__ == '__main__':
    df = cleanData()
    df = operateData(df)
    saveFiles(df)
    
